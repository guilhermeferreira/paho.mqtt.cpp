language: cpp

sudo: required

dist: trusty

os: linux

install:
  # Install Google Test
  - sudo wget https://github.com/google/googletest/archive/release-1.7.0.tar.gz
  - sudo tar xf release-1.7.0.tar.gz
  - cd googletest-release-1.7.0
  - sudo cmake -DBUILD_SHARED_LIBS=ON .
  - sudo make
  - sudo cp -a include/gtest /usr/include
  - sudo cp -a libgtest_main.so libgtest.so /usr/lib/
  - cd -
  # Install Paho MQTT C (Need only paho-mqtt3a and paho-mqtt3as)
  - git clone https://github.com/eclipse/paho.mqtt.c.git
  - cd paho.mqtt.c
  - git checkout -t origin/develop
  - mkdir build_cmake
  - cd build_cmake
  - cmake -DPAHO_WITH_SSL=ON ..
  - make
  - sudo make install
  - cd ../..
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

addons:
  apt:
    sources:
      - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
    packages:
      - cppcheck
      - libcppunit-dev # Install CppUnit
      - git
      - cmake
      - cmake-data
      - doxygen

matrix:
  include:
    # GCC 4.8
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - g++-4.8
            - cppcheck
            - libcppunit-dev # Install CppUnit
            - git
            - cmake
            - cmake-data
            - doxygen
      env: COMPILER=g++-4.8
    # GCC 4.9
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - g++-4.9
            - cppcheck
            - libcppunit-dev # Install CppUnit
            - git
            - cmake
            - cmake-data
            - doxygen
      env: COMPILER=g++-4.9
    # GCC 5
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - g++-5
            - cppcheck
            - libcppunit-dev # Install CppUnit
            - git
            - cmake
            - cmake-data
            - doxygen
      env: COMPILER=g++-5
    # GCC 6
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - g++-6
            - cppcheck
            - libcppunit-dev # Install CppUnit
            - git
            - cmake
            - cmake-data
            - doxygen
      env: COMPILER=g++-6
    # Clang 3.6
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - clang-3.6
            - cppcheck
            - libcppunit-dev # Install CppUnit
            - git
            - cmake
            - cmake-data
            - doxygen
      env: COMPILER=clang++-3.6
    # Clang 3.8
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
            - george-edison55-precise-backports # cmake 3.2.3 / doxygen 1.8.3
          packages:
            - clang-3.8
            - cppcheck
            - libcppunit-dev # Install CppUnit
            - git
            - cmake
            - cmake-data
            - doxygen
      env: COMPILER=clang++-3.8
  exclude:
    - compiler: gcc

script:
  # Test Makefile building
  - if [ "$COMPILER" == "" ]; then COMPILER=g++; fi && make clean && make CXX=$COMPILER
  - if [ "$COMPILER" == "" ]; then COMPILER=g++; fi && make clean && make CXX=$COMPILER PAHO_CPP_LIB_DIR=../../lib SSL=1 check
  # Test CMake building
  - if [ "$COMPILER" == "" ]; then COMPILER=g++; fi && rm -rf build_cmake && mkdir build_cmake && cd build_cmake && cmake -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_INSTALL_PREFIX=/tmp/paho-cpp -DPAHO_BUILD_SAMPLES=ON -DPAHO_BUILD_STATIC=ON -DPAHO_BUILD_DOCUMENTATION=OFF -DPAHO_WITH_SSL=OFF .. && make && make install; cd ..
  - if [ "$COMPILER" == "" ]; then COMPILER=g++; fi && rm -rf build_cmake && mkdir build_cmake && cd build_cmake && cmake -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_INSTALL_PREFIX=/tmp/paho-cpp -DPAHO_BUILD_SAMPLES=ON -DPAHO_BUILD_STATIC=ON -DPAHO_BUILD_DOCUMENTATION=ON  -DPAHO_WITH_SSL=ON  .. && make && make install; cd ..
  # Test Autotools building
  - if [ "$COMPILER" == "" ]; then COMPILER=g++; fi && ./bootstrap && rm -rf build_autotools/ && mkdir build_autotools/ && cd build_autotools/ && ../configure CXX=$COMPILER --enable-samples=yes --enable-static=yes --enable-doc=no  --with-ssl=no  && make && make check; cat test-suite.log; cd -
  - if [ "$COMPILER" == "" ]; then COMPILER=g++; fi && ./bootstrap && rm -rf build_autotools/ && mkdir build_autotools/ && cd build_autotools/ && ../configure CXX=$COMPILER --enable-samples=yes --enable-static=yes --enable-doc=yes --with-ssl=yes && make && make check; cat test-suite.log; cd -
  # Static Analysis
  - cppcheck --enable=all --std=c++11 --force --quiet src/*.cpp

